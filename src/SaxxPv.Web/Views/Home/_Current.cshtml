@model SaxxPv.Web.ViewModels.Home.DayViewModel

@{
    const int animationThreshold = 50;
}

@if (Model.IsCurrentDay)
{
    <div style="margin-top:1rem; text-align:center;">
        <h3>Currently</h3>
        <i class="fad fa-lightbulb-on @(Model.CurrentLoad >= animationThreshold ? "fa-beat-fade" : "")"></i>
        <span class="@(Model.CurrentLoad >= animationThreshold ? "fa-beat-fade" : "")">-@((Model.CurrentLoad / 1000d)?.ToString("N1")) kW</span>
        <br/>

        <i class="fad fa-solar-panel @(Model.CurrentPv >= animationThreshold ? "fa-beat-fade" : "")"></i>
        <span class="@(Model.CurrentPv >= animationThreshold ? "fa-beat-fade" : "")">+@((Model.CurrentPv / 1000d)?.ToString("N1")) kW</span>
        <br/>

        @if (Model.CurrentBattery <= 0)
        {
            <i class="fad fa-battery @(Model.CurrentBattery <= -animationThreshold ? "fa-beat-fade" : "")"></i>
            <i class="fad fa-arrow-right-long @(Model.CurrentBattery <= -animationThreshold ? "fa-beat" : "")"></i>
            <i class="fad fa-house @(Model.CurrentBattery <= -animationThreshold ? "fa-beat-fade" : "")"></i>
            <b class="@(Model.CurrentBattery <= -animationThreshold ? "fa-beat-fade" : "")">@((Model.CurrentBattery / 1000d)?.ToString("N1")) kW</b>
        }
        else
        {
            <i class="fad fa-solar-panel @(Model.CurrentBattery >= animationThreshold ? "fa-beat-fade" : "")"></i>
            <i class="fad fa-arrow-right-long @(Model.CurrentBattery >= animationThreshold ? "fa-beat" : "")"></i>
            <i class="fad fa-battery @(Model.CurrentBattery >= animationThreshold ? "fa-beat-fade" : "")"></i>
            <b class="@(Model.CurrentBattery >= animationThreshold ? "fa-beat-fade" : "")">+@((Model.CurrentBattery / 1000d)?.ToString("N1")) kW</b>
        }

        <br/>

        @if (Model.CurrentGrid <= 0)
        {
            <i class="fad fa-utility-pole-double @(Model.CurrentGrid <= -animationThreshold ? "fa-beat-fade" : "")"></i>
            <i class="fad fa-arrow-right-long @(Model.CurrentGrid <= -animationThreshold ? "fa-beat" : "")"></i>
            <i class="fad fa-house @(Model.CurrentGrid <= -animationThreshold ? "fa-beat-fade" : "")"></i>
            <b class="@(Model.CurrentGrid <= -animationThreshold ? "fa-beat-fade" : "")">@((Model.CurrentGrid / 1000d)?.ToString("N1")) kW</b>
        }
        else
        {
            <i class="fad fa-solar-panel @(Model.CurrentGrid >= animationThreshold ? "fa-beat-fade" : "")"></i>
            <i class="fad fa-arrow-right-long @(Model.CurrentGrid >= animationThreshold ? "fa-beat" : "")"></i>
            <i class="fad fa-utility-pole-double @(Model.CurrentGrid >= animationThreshold ? "fa-beat-fade" : "")"></i>
            <b class="@(Model.CurrentGrid >= animationThreshold ? "fa-beat-fade" : "")">+@((Model.CurrentGrid / 1000d)?.ToString("N1")) kW</b>
        }

        <br/>
        <i class="fad fa-battery"></i>
        @(Model.CurrentBatterySoc?.ToString("N0")) %
    </div>
}
